"use strict";(self.webpackChunkzharii=self.webpackChunkzharii||[]).push([[1244],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return h}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(a),h=r,d=m["".concat(p,".").concat(h)]||m[h]||c[h]||i;return a?n.createElement(d,l(l({ref:t},u),{},{components:a})):n.createElement(d,l({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8649:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=["components"],o={},p="C++",s={unversionedId:"dev/dev-c_plus_plus",id:"dev/dev-c_plus_plus",title:"C++",description:"C++ Interactive tutorials",source:"@site/docs/dev/dev-c_plus_plus.md",sourceDirName:"dev",slug:"/dev/dev-c_plus_plus",permalink:"/docs/dev/dev-c_plus_plus",editUrl:"https://github.com/dzharii/dzharii.github.io/docs/dev/dev-c_plus_plus.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"dev-c",permalink:"/docs/dev/dev-c"},next:{title:"Classics of software development",permalink:"/docs/dev/dev-classics"}},u=[{value:"C++ Interactive tutorials",id:"c-interactive-tutorials",children:[],level:2},{value:"C++ Other learning resources",id:"c-other-learning-resources",children:[],level:2},{value:"C++ Style guides",id:"c-style-guides",children:[],level:2},{value:"C++ Build tools",id:"c-build-tools",children:[],level:2},{value:"C++ and Unicode",id:"c-and-unicode",children:[{value:"CMAKE",id:"cmake",children:[],level:3},{value:"C++ CHEATSHEET",id:"c-cheatsheet",children:[],level:3}],level:2}],c={toc:u};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"c"},"C++"),(0,i.kt)("h2",{id:"c-interactive-tutorials"},"C++ Interactive tutorials"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-10-03 ",(0,i.kt)("a",{parentName:"li",href:"https://cplusplus.com/doc/tutorial/files/"},"Input/output with files"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"interactive tutorial"))),(0,i.kt)("li",{parentName:"ul"},"2022-10-03 ",(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=33061140#33064712"},"Ask HN: Where can I find C++ by Example? Hacker News"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"my HN question"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cppbyexample.com/"},"https://cppbyexample.com/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://hackingcpp.com/"},"https://hackingcpp.com/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.learncpp.com/"},"https://www.learncpp.com/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/AnthonyCalandra/modern-cpp-features"},"https://github.com/AnthonyCalandra/modern-cpp-features")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cppinsights.io/"},"https://cppinsights.io/")," it's a must so you can investigate what gets generated by templates behind the scenes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://eel.is/c++draft/"},"http://eel.is/c++draft/")," bookmark this, you will need it!")),(0,i.kt)("p",null,"These two are very good beginner resources:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://pythontutor.com/cpp.html"},"https://pythontutor.com/cpp.html"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://www.learn-cpp.org"},"https://www.learn-cpp.org"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://godbolt.org"},"https://godbolt.org"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://root.cern/cling"},"https://root.cern/cling"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-10-03 ",(0,i.kt)("a",{parentName:"p",href:"https://blog.llvm.org/posts/2020-11-30-interactive-cpp-with-cling/"},"Interactive C++ with Cling - The LLVM Project Blog")))),(0,i.kt)("h2",{id:"c-other-learning-resources"},"C++ Other learning resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-10-02 ",(0,i.kt)("a",{parentName:"li",href:"https://cppbyexample.com/"},"C++ By Example Code Examples with Simple Explanations")),(0,i.kt)("li",{parentName:"ul"},"2022-10-02 ",(0,i.kt)("a",{parentName:"li",href:"https://www.scs.stanford.edu/~dm/blog/c++-coroutines.html"},"My tutorial and take on C++20 coroutines")),(0,i.kt)("li",{parentName:"ul"},"2022-10-02 ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/uhub/awesome-cpp"},"uhub/awesome-cpp: A curated list of awesome C++ frameworks, libraries and software.")),(0,i.kt)("li",{parentName:"ul"},"2022-10-02 ",(0,i.kt)("a",{parentName:"li",href:"https://developers.google.com/edu/c++/next-steps"},"Next Steps C++ Education Google Developers")),(0,i.kt)("li",{parentName:"ul"},"2022-10-02 ",(0,i.kt)("a",{parentName:"li",href:"https://www.programiz.com/cpp-programming/examples"},"C++ Examples Programiz")),(0,i.kt)("li",{parentName:"ul"},"2022-10-02 ",(0,i.kt)("a",{parentName:"li",href:"https://developers.google.com/edu/c++/next-steps"},"Next Steps C++ Education Google Developers"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Google's Introduction to Programming and C++\nThis online tutorial continues with more advanced concepts - please read Part III. Our focus in this module will be on using pointers, and getting started with objects.\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-09-29 ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/changkun/modern-cpp-tutorial"},"changkun/modern-cpp-tutorial: \ud83d\udcda Modern C++ Tutorial: C++11/14/17/20 On the Fly https://changkun.de/modern-cpp/")),(0,i.kt)("li",{parentName:"ul"},"2022-09-29 ",(0,i.kt)("a",{parentName:"li",href:"https://changkun.de/modern-cpp/pdf/modern-cpp-tutorial-en-us.pdf"},"modern-cpp-tutorial"))),(0,i.kt)("h2",{id:"c-style-guides"},"C++ Style guides"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-10-02 ",(0,i.kt)("a",{parentName:"li",href:"https://google.github.io/styleguide/cppguide.html"},"Google C++ Style Guide"))),(0,i.kt)("h2",{id:"c-build-tools"},"C++ Build tools"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-10-03 ",(0,i.kt)("a",{parentName:"li",href:"https://ninja-build.org/"},"Ninja"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"Ninja is a small build system with a focus on speed"))),(0,i.kt)("li",{parentName:"ul"},"2022-10-03 ",(0,i.kt)("a",{parentName:"li",href:"https://cmake.org/"},"Cmake"),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"CMake is an open-source, cross-platform family of tools designed to build, test and package software. CMake is used to control the software compilation process using simple platform and compiler independent configuration files")))),(0,i.kt)("h2",{id:"c-and-unicode"},"C++ and Unicode"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-09-29 ",(0,i.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/5850358/is-there-a-preprocessor-define-that-is-defined-if-the-compiler-is-msvc"},"c++ - Is there a preprocessor define that is defined if the compiler is MSVC? - Stack Overflow"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"It's _MSC_VER. More info at MSDN and at predef.\n\nBut, be aware that some other compilers may also define it, e.g. Intel's C++ Compiler for Windows also defines _MSC_VER. If this is a concern, use #if _MSC_VER && !__INTEL_COMPILER.\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-09-29 ",(0,i.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/windows/console/setconsolecp"},"SetConsoleCP function - Windows Console Microsoft Learn"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"BOOL WINAPI SetConsoleCP(\n  _In_\xa0UINT wCodePageID\n);\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-09-29 ",(0,i.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/71342226/c-not-printing-emojis-as-expected"},"C++ not printing emojis as expected - Stack Overflow"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'#include <windows.h>\n#include <iostream>\n\nint main(){\n  SetConsoleOutputCP(CP_UTF8);\n  std::cout << "1) \u270a\\n";\n  std::cout << "2) \u270b\\n";\n  std::cout << "3) \u270c\ufe0f\\n";\n  return 0;\n}\n')),(0,i.kt)("h3",{id:"cmake"},"CMAKE"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-29 ",(0,i.kt)("a",{parentName:"p",href:"https://hsf-training.github.io/hsf-training-cmake-webpage/08-debugging/index.html"},"Debugging \u2013 More Modern CMake")),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"Cmake article on debugging"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-29 ",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/7724569/debug-vs-release-in-cmake"},"c++ - Debug vs Release in CMake - Stack Overflow")))),(0,i.kt)("p",null,"A lot of the answers here are out of date/bad. So I'm going to attempt to answer it better. Granted I'm answering this question in 2020, so it's expected things would change."),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How do I run CMake for each target type (debug/release)?")),(0,i.kt)("p",null,"First off Debug/Release are called configurations in cmake (nitpick)."),(0,i.kt)("p",null,"If you are using a single configuration generator (Ninja/Unix-Makefiles) you must specify the\xa0",(0,i.kt)("a",{parentName:"p",href:"https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type"},"CMAKE_BUILD_TYPE"),"."),(0,i.kt)("p",null,"Like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Configure the build\ncmake -S . -B build/ -D CMAKE_BUILD_TYPE=Debug\n\n# Actually build the binaries\ncmake --build build/\n\n# Configure a release build\ncmake -S . -B build/ -D CMAKE_BUILD_TYPE=Release\n\n# Build release binaries\ncmake --build build/\n\n")),(0,i.kt)("p",null,"For multi-configuration generators it's slightly different (Ninja Multi-Config, Visual Studio)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Configure the build\ncmake -S . -B build\n\n# Build debug binaries\ncmake --build build --config Debug\n\n# Build release binaries\ncmake --build build --config Release\n\n")),(0,i.kt)("p",null,"If you are wondering why this is necessary it's because cmake isn't a build system. It's a meta-build system (IE a build system that build's build systems). This is basically the result of handling build systems that support multiple-configurations in 1 build. If you'd like a deeper understanding I'd suggest reading a bit about cmake in Craig Scott's book \"Professional CMake: A Practical Guide"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How do I specify debug and release C/C++ flags using CMake?")),(0,i.kt)("p",null,"The modern practice is to use target's and properties."),(0,i.kt)("p",null,"Here is an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"add_library(foobar)\n\n# Add this compile definition for debug builds, this same logic works for\n# target_compile_options, target_link_options, etc.\ntarget_compile_definitions(foobar PRIVATE\n    $<$<CONFIG:Debug>:\n        FOOBAR_DEBUG=1\n    >\n)\n\n")),(0,i.kt)("p",null,"NOTE: How I'm using generator expressions to specify the configuration! Using CMAKE_BUILD_TYPE will result in bad builds for any multi-configuration generator!"),(0,i.kt)("p",null,"Further more sometimes you need to set things globally and not just for one target. Use add_compile_definitions, add_compile_options, etc. Those functions support generator expressions. Don't use old style cmake unless you have to (that path is a land of nightmares)"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How do I express that the main executable will be compiled with g++ and one nested library with gcc?")),(0,i.kt)("p",null,"Your last question really doesn't make sense."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"2022-09-29 ",(0,i.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/7724569/debug-vs-release-in-cmake"},"c++ - Debug vs Release in CMake - Stack Overflow"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'With CMake, it\'s generally recommended to do an "out of source" build. Create your CMakeLists.txt in the root of your project. Then from the root of your project:\n\nmkdir Release\ncd Release\ncmake -DCMAKE_BUILD_TYPE=Release ..\nmake\nAnd for Debug (again from the root of your project):\n\nmkdir Debug\ncd Debug\ncmake -DCMAKE_BUILD_TYPE=Debug ..\nmake\nRelease / Debug will add the appropriate flags for your compiler. There are also RelWithDebInfo and MinSizeRel build configurations.\n')),(0,i.kt)("h3",{id:"c-cheatsheet"},"C++ CHEATSHEET"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Rainier-Cyber/C-cheatsheet"},"Rainier-Cyber/C-cheatsheet: A MEMORY DUMP OF C PROGRAMMING, by Sean Eyre @oni49 and Stephen Semmelroth @stephensemmelroth / @diodepack of Rainier Cyber acquired by StrataCore . This document is intended to provide you a quick desk reference for C\u2019s syntax and semantics. We included several example programs that will elaborate on each section in greater detail."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/karansaxena/STL_Cheat_Sheets"},"karansaxena/STL_Cheat_Sheets: C++ STL Cheat Sheets."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\ud83d\udccc 2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ufoym/cpp-core-guidelines-cheatsheet"},"ufoym/cpp-core-guidelines-cheatsheet: Cheatsheet for the C++ core guidelines, including a set of tried-and-true guidelines, rules, and best practices about coding in C++."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/muqsitnawaz/modern-cpp-cheatsheet"},"muqsitnawaz/modern-cpp-cheatsheet: Cheatsheet for best practices of Modern C++ taken from Effective Modern C++"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/alugili/CSharp-9-CheatSheet"},"alugili/CSharp-9-CheatSheet: C# 9 Cheat Sheet with code example and pros and cons."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mortennobel/cpp-cheatsheet"},"mortennobel/cpp-cheatsheet: Modern C++ Cheatsheet"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/AnthonyCalandra/modern-cpp-features"},"AnthonyCalandra/modern-cpp-features: A cheatsheet of modern C++ language and library features."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jwill9999/C-Sharp-Cheatsheet"},"jwill9999/C-Sharp-Cheatsheet: C# Cheatsheet"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/crazyguitar/cppcheatsheet"},"crazyguitar/cppcheatsheet: C/C++ Cheat Sheet"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2022-09-26 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/vaputa/awesome-cheatsheet"},"vaputa/awesome-cheatsheet: A collection of awesome cheatsheets. Including git, python, c/c++, frontend, matlab, markdown, etc.")))))}m.isMDXComponent=!0}}]);