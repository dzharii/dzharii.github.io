"use strict";(self.webpackChunkzharii=self.webpackChunkzharii||[]).push([[1830],{96080:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var o=t(667);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,l=function(e,n){if(null==e)return{};var t,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=o.createContext({}),d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(t),m=l,y=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return t?o.createElement(y,a(a({ref:n},c),{},{components:t})):o.createElement(y,a({ref:n},c))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,a=new Array(r);a[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var d=2;d<r;d++)a[d]=t[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},69222:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var o=t(54570),l=t(89462),r=(t(667),t(96080)),a=["components"],i={},s="\ud83d\udcdc BookmarkLETS",d={unversionedId:"bookmarklets",id:"bookmarklets",title:"\ud83d\udcdc BookmarkLETS",description:"This is a collection of JavaScript bookmarklets to assist in everyday life copy pasting.",source:"@site/docs/bookmarklets.md",sourceDirName:".",slug:"/bookmarklets",permalink:"/docs/bookmarklets",editUrl:"https://github.com/dzharii/dzharii.github.io/docs/bookmarklets.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83e\udd16 Bookmarks: My GPT/AI Prompts",permalink:"/docs/bookmark-my-GPT-prompts"},next:{title:"\ud83d\udccc Bookmarks",permalink:"/docs/bookmarks"}},c=[{value:"Download YouTube Subtitles",id:"download-youtube-subtitles",children:[],level:2},{value:"Copy markdown link to this page",id:"copy-markdown-link-to-this-page",children:[],level:2},{value:"Copy Org-mode link",id:"copy-org-mode-link",children:[],level:2},{value:"RSS Feed Finder 2",id:"rss-feed-finder-2",children:[],level:2},{value:"RSS Feed Finder",id:"rss-feed-finder",children:[],level:2},{value:"Leetcode copy submission",id:"leetcode-copy-submission",children:[],level:2},{value:"Content editable",id:"content-editable",children:[],level:2},{value:"Force visited links to be &quot;silver&quot;",id:"force-visited-links-to-be-silver",children:[],level:2},{value:"Wake lock",id:"wake-lock",children:[],level:2},{value:"Next, please!",id:"next-please",children:[],level:2}],u={toc:c};function p(e){var n=e.components,t=(0,l.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-bookmarklets"},"\ud83d\udcdc BookmarkLETS"),(0,r.kt)("p",null,"This is a collection of JavaScript bookmarklets to assist in everyday life copy pasting."),(0,r.kt)("h2",{id:"download-youtube-subtitles"},"Download YouTube Subtitles"),(0,r.kt)("p",null,"Opens a new tab to download subtitles for the current YouTube video."),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83d\udce5 Download YouTube Subtitles")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"2024-09-29 - initial")),(0,r.kt)("details",null,(0,r.kt)("summary",null," Code:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"javascript:(function(){\n    /* Check if the current site is YouTube and has a video ID */\n    if (window.location.hostname.includes('youtube.com') && new URLSearchParams(window.location.search).has('v')) {\n        /* Get the current page URL */\n        var currentUrl = window.location.href;\n        /* Encode the URL */\n        var encodedUrl = encodeURIComponent(currentUrl);\n        /*  Construct the target URL */\n        var targetUrl = 'https://www.downloadyoutubesubtitles.com/?u=' + encodedUrl;\n        /* Open the target URL in a new tab */\n        window.open(targetUrl, '_blank');\n    } else {\n        /* Alert the user if not on a YouTube video page */\n        alert('This bookmarklet works only on YouTube video pages.');\n    }\n})();\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\njavascript:(function(){if(window.location.hostname.includes('youtube.com')&&new URLSearchParams(window.location.search).has('v')){var currentUrl=window.location.href;var encodedUrl=encodeURIComponent(currentUrl);var targetUrl='https://www.downloadyoutubesubtitles.com/?u='+encodedUrl;window.open(targetUrl,'_blank');}else{alert('This bookmarklet works only on YouTube video pages.');}})();\n\n"))),(0,r.kt)("h2",{id:"copy-markdown-link-to-this-page"},"Copy markdown link to this page"),(0,r.kt)("p",null,"Copies link to the current page in clipboard in Markdown format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2023-03-12 [Hello from Dmytro Zharii | Dmytro Zharii](https://blog.zharii.com/)\n")),(0,r.kt)("p",null,"2023-03-12 ",(0,r.kt)("a",{parentName:"p",href:"https://blog.zharii.com/"},"Hello from Dmytro Zharii | Dmytro Zharii")),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83e\udd67 Copy as MD Link")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"2023-03-12 - initial"),(0,r.kt)("li",{parentName:"ul"},'2024-08-17 - add domain as in "{ domain.com }"')),(0,r.kt)("details",null,(0,r.kt)("summary",null," Code:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'javascript:(function() {\n  function showToast(message, textColor, backgroundColor) {\n    var toast = document.createElement("div");\n    toast.style.cssText = "position: fixed; top: 0; left: 0; background-color: " + backgroundColor + "; color: " + textColor + "; padding: 10px; font-family: Arial, Verdana; font-size: 16px; font-weight: bold;  z-index: 9999; opacity: 0; transition: opacity 0.3s ease-in-out;";\n    toast.innerHTML = message;\n    document.body.appendChild(toast);\n    setTimeout(function() {\n      toast.style.opacity = 1;\n    }, 100);\n    setTimeout(function() {\n      toast.style.opacity = 0;\n    }, 3000);\n  }\n\n  document.body.focus();\n  var title = document.title;\n  /* remove [ and ] from title */\n  title = title.replace(/[\\[\\]]/g, \' \');\n\n  var url = window.location.href;\n  /* remove utm parameters from url */\n  url = url.replace(/utm_[^&]+&?/g, \'\');\n  /* remove final /? from url */\n  url = url.replace(/\\/\\?$/g, \'/\');\n  url = url.replace(/\\?$/g, \'/\');\n\n  var date = new Date().toISOString().slice(0, 10);\n  var markdownLink = date + " [" + title + "](" + url + ")";\n  \n  try {\n    var urlObject = new URL(url);\n    var domain = urlObject.hostname;\n    markdownLink += " { " + domain + " }";\n  } catch (e) {\n    console.error("Failed to parse domain name: ", e);\n  }\n\n  setTimeout(function() {\n    navigator.clipboard.writeText(markdownLink).then(function() {\n      showToast("Copied to clipboard", "lime", "#333");\n    }, function() {\n      showToast("Failed to copy to clipboard", "white", "darkred");\n    });\n  }, 100);\n})();\n'))),(0,r.kt)("h2",{id:"copy-org-mode-link"},"Copy Org-mode link"),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83e\udd67 Copy as ORG Link")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("p",null,"2024-05-13"),(0,r.kt)("details",null,(0,r.kt)("summary",null," Code:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'javascript:(function() {\n    function showToast(message, textColor, backgroundColor) {\n        var toast = document.createElement("div");\n        toast.style.cssText = "position: fixed; top: 0; left: 0; background-color: " + backgroundColor + "; color: " + textColor + "; padding: 10px; font-family: Arial, Verdana; font-size: 16px; font-weight: bold;  z-index: 9999; opacity: 0; transition: opacity 0.3s ease-in-out;";\n        toast.innerHTML = message;\n        document.body.appendChild(toast);\n        setTimeout(function() {\n            toast.style.opacity = 1;\n        }, 100);\n        setTimeout(function() {\n            toast.style.opacity = 0;\n            document.body.removeChild(toast);\n        }, 3000);\n    }\n    \n    document.body.focus();\n    var title = document.title;\n    /* remove [ and ] from title */\n    title = title.replace(/[\\[\\]]/g, \' \');\n\n    var url = window.location.href;\n    /* remove utm parameters from url */\n    url = url.replace(/utm_[^&]+&?/g, \'\');\n    /* clean up unnecessary trailing characters */\n    url = url.replace(/\\/?\\?$/g, \'\');\n    url = url.replace(/\\?$/g, \'/\');\n\n    var date = new Date().toISOString().slice(0, 10);\n    var orgModeLink = "[[" + url + "][" + date + " " + title + "]]";\n\n    try {\n      var urlObject = new URL(url);\n      var domain = urlObject.hostname;\n      orgModeLink += " =" + domain + "=";\n    } catch (e) {\n      console.error("Failed to parse domain name: ", e);\n    }\n  \n    setTimeout(function() {\n        navigator.clipboard.writeText(orgModeLink).then(function() {\n            showToast("Copied to clipboard", "lime", "#333");\n        }, function() {\n            showToast("Failed to copy to clipboard", "white", "darkred");\n        });\n    }, 100);\n})();\n\n'))),(0,r.kt)("h2",{id:"rss-feed-finder-2"},"RSS Feed Finder 2"),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83d\udcf6 Find RSS II")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("p",null,"2025-03-04"),(0,r.kt)("details",null,(0,r.kt)("summary",null," Code:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"javascript:(async () => {\n  const pageUrl = document.location.href;\n  let feedUrls = [];\n\n  try {\n    const resp = await fetch(pageUrl);\n    const body = await resp.text();\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(body, 'text/html');\n\n    // Get standard RSS and Atom feed links\n    const linkSelectors = [\n      'link[type=\"application/rss+xml\"]',\n      'link[type=\"application/atom+xml\"]',\n      'link[rel=\"alternate\"][type*=\"rss\"]',\n      'link[rel=\"alternate\"][type*=\"atom\"]'\n    ];\n    linkSelectors.forEach(selector => {\n      const links = Array.from(doc.querySelectorAll(selector));\n      links.forEach(link => {\n        const url = link.getAttribute('href');\n        if (url) feedUrls.push(url);\n      });\n    });\n  } catch (error) {\n    console.error('Error fetching page source:', error);\n  }\n\n  // Define site-specific heuristics\n  const siteSpecificFeeds = {\n    'reddit.com': (url, doc) => {\n      const subredditMatch = url.match(/reddit\\.com\\/r\\/([^\\/]+)\\/?/);\n      if (subredditMatch) {\n        return [`https://www.reddit.com/r/${subredditMatch[1]}/.rss`];\n      }\n      return ['https://www.reddit.com/.rss'];\n    },\n    'youtube.com': (url, doc) => {\n      const channelMatch = url.match(/youtube\\.com\\/channel\\/([^\\/]+)/);\n      if (channelMatch) {\n        return [`https://www.youtube.com/feeds/videos.xml?channel_id=${channelMatch[1]}`];\n      }\n      const userMatch = url.match(/youtube\\.com\\/user\\/([^\\/]+)/);\n      if (userMatch) {\n        return [`https://www.youtube.com/feeds/videos.xml?user=${userMatch[1]}`];\n      }\n      return [];\n    },\n    'medium.com': (url, doc) => {\n      return url.endsWith('/feed') ? [] : [`${url.replace(/\\/$/, '')}/feed`];\n    },\n    'blogspot.com': (url, doc) => {\n      return [`${url.replace(/\\/$/, '')}/feeds/posts/default?alt=rss`];\n    }\n    // Additional sites can be added here\n  };\n\n  // Extract the hostname from the current page URL\n  const hostname = new URL(pageUrl).hostname;\n\n  // Check and add site-specific feeds if applicable\n  Object.keys(siteSpecificFeeds).forEach(domain => {\n    if (hostname.includes(domain)) {\n      const siteFeeds = siteSpecificFeeds[domain](pageUrl, document);\n      feedUrls = feedUrls.concat(siteFeeds);\n    }\n  });\n\n  // Convert any relative URLs to absolute URLs using the current page URL as base\n  feedUrls = feedUrls.map(url => {\n    try {\n      return new URL(url, pageUrl).href;\n    } catch (e) {\n      console.error('Invalid URL found:', url);\n      return url;\n    }\n  });\n\n  // Remove duplicates\n  feedUrls = [...new Set(feedUrls)];\n\n  // Create the dialog to display the results\n  createDialog(feedUrls);\n\n  function createDialog(feedUrls) {\n    const dialog = document.createElement('div');\n    styleDialog(dialog, feedUrls.length > 0);\n    document.body.appendChild(dialog);\n\n    // Create a header strip to indicate status\n    const headerStrip = document.createElement('div');\n    headerStrip.style.height = '5px';\n    headerStrip.style.width = '100%';\n    headerStrip.style.backgroundColor = feedUrls.length > 0 ? '#4CAF50' : '#f44336';\n    dialog.appendChild(headerStrip);\n\n    // Create a content container\n    const content = document.createElement('div');\n    content.style.padding = '15px';\n\n    if (feedUrls.length > 0) {\n      const ul = document.createElement('ul');\n      ul.style.listStyle = 'none';\n      ul.style.padding = '0';\n      ul.style.margin = '0 0 10px 0';\n      feedUrls.forEach(url => {\n        const li = document.createElement('li');\n        li.style.marginBottom = '10px';\n        li.style.display = 'flex';\n        li.style.justifyContent = 'space-between';\n        li.style.alignItems = 'center';\n        li.style.borderBottom = '1px solid #eee';\n        li.style.paddingBottom = '5px';\n\n        const span = document.createElement('span');\n        span.textContent = url;\n        span.style.wordBreak = 'break-all';\n        li.appendChild(span);\n\n        const copyBtn = createCopyButton(url);\n        li.appendChild(copyBtn);\n        ul.appendChild(li);\n      });\n      content.appendChild(ul);\n    } else {\n      const message = document.createElement('div');\n      message.textContent = 'No RSS Feed found';\n      message.style.textAlign = 'center';\n      message.style.padding = '10px';\n      content.appendChild(message);\n      setTimeout(() => fadeAndRemove(dialog), 3000);\n    }\n\n    const closeBtn = createCloseButton(dialog);\n    content.appendChild(closeBtn);\n    dialog.appendChild(content);\n  }\n\n  function styleDialog(dialog, hasFeeds) {\n    dialog.style.position = 'fixed';\n    dialog.style.top = '20px';\n    dialog.style.left = '50%';\n    dialog.style.transform = 'translateX(-50%)';\n    dialog.style.backgroundColor = 'white';\n    dialog.style.borderRadius = '5px';\n    dialog.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';\n    dialog.style.fontFamily = 'Arial, sans-serif';\n    dialog.style.fontSize = '14px';\n    dialog.style.color = '#333';\n    dialog.style.minWidth = '300px';\n    dialog.style.overflow = 'hidden';\n    dialog.style.zIndex = '10000';\n  }\n\n  function createCopyButton(text) {\n    const button = document.createElement('button');\n    button.textContent = 'Copy';\n    button.style.padding = '5px 10px';\n    button.style.marginLeft = '10px';\n    button.style.border = 'none';\n    button.style.borderRadius = '3px';\n    button.style.backgroundColor = '#eee';\n    button.style.cursor = 'pointer';\n    button.onclick = () => {\n      navigator.clipboard.writeText(text).then(() =>\n        fadeAndRemove(button.closest('div'))\n      );\n    };\n    return button;\n  }\n\n  function createCloseButton(dialog) {\n    const button = document.createElement('button');\n    button.textContent = 'Close';\n    button.style.padding = '5px 10px';\n    button.style.border = 'none';\n    button.style.borderRadius = '3px';\n    button.style.backgroundColor = '#ddd';\n    button.style.cursor = 'pointer';\n    button.style.display = 'block';\n    button.style.margin = '10px auto 0 auto';\n    button.onclick = () => dialog.remove();\n    return button;\n  }\n\n  function fadeAndRemove(element) {\n    element.style.transition = 'opacity 0.5s';\n    element.style.opacity = '0';\n    setTimeout(() => element.remove(), 500);\n  }\n})();\n\n"))),(0,r.kt)("h2",{id:"rss-feed-finder"},"RSS Feed Finder"),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83d\udcf6 Find RSS")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("p",null,"2024-01-01"),(0,r.kt)("details",null,(0,r.kt)("summary",null," Code:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"javascript:(async () => {\n    const pageUrl = document.location.href;\n\n    try {\n        const resp = await fetch(pageUrl);\n        const body = await resp.text();\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(body, 'text/html');\n        const rssLinks = doc.querySelectorAll('link[type=\"application/rss+xml\"]');\n        createDialog(Array.from(rssLinks).map(link => link.getAttribute('href')));\n    } catch (error) {\n        console.error('Error fetching page source:', error);\n        createDialog([]);\n    }\n\n    function createDialog(feedUrls) {\n        const dialog = document.createElement('div');\n        styleDialog(dialog, feedUrls.length > 0);\n        document.body.appendChild(dialog);\n\n        if (feedUrls.length > 0) {\n            const ul = document.createElement('ul');\n            feedUrls.forEach(url => {\n                const li = document.createElement('li');\n                li.textContent = url;\n                const copyBtn = createCopyButton(url);\n                li.appendChild(copyBtn);\n                ul.appendChild(li);\n            });\n            dialog.appendChild(ul);\n        } else {\n            dialog.textContent = 'No RSS Feed found';\n            setTimeout(() => fadeAndRemove(dialog), 3000);\n        }\n\n        const closeBtn = createCloseButton(dialog);\n        dialog.appendChild(closeBtn);\n    }\n\n    function styleDialog(dialog, hasFeeds) {\n        dialog.style.position = 'fixed';\n        dialog.style.top = '20px';\n        dialog.style.left = '50%';\n        dialog.style.transform = 'translateX(-50%)';\n        dialog.style.backgroundColor = hasFeeds ? 'green' : 'red';\n        dialog.style.padding = '20px';\n        dialog.style.zIndex = '10000';\n        dialog.style.color = 'white';\n        dialog.style.borderRadius = '5px';\n        dialog.style.fontSize = '16px';\n    }\n\n    function createCopyButton(text) {\n        const button = document.createElement('button');\n        button.textContent = 'Copy to Clipboard';\n        button.style.marginLeft = '10px';\n        button.onclick = () => {\n            navigator.clipboard.writeText(text).then(() => fadeAndRemove(button.parentElement.parentElement.parentElement));\n        };\n        return button;\n    }\n\n    function createCloseButton(dialog) {\n        const button = document.createElement('button');\n        button.textContent = 'Close';\n        button.style.display = 'block';\n        button.style.marginTop = '10px';\n        button.onclick = () => dialog.remove();\n        return button;\n    }\n\n    function fadeAndRemove(element) {\n        element.style.transition = 'opacity 0.5s';\n        element.style.opacity = '0';\n        setTimeout(() => element.remove(), 500);\n    }\n})();\n"))),(0,r.kt)("h2",{id:"leetcode-copy-submission"},"Leetcode copy submission"),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\u2728 Leetcode get submission url")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("p",null,"2024-05-07"),(0,r.kt)("p",null,"Code:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Code snippet for \u2728 Leetcode get submission url "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"javascript:(function(){\n    function transformURL(url) {\n        const regex = /https:\\/\\/leetcode\\.com\\/problems\\/.+?\\/submissions\\/(\\d+)/;\n        const match = url.match(regex);\n        if (match && match[1]) {\n            return `https://leetcode.com/submissions/detail/${match[1]}/`;\n        }\n        return null;\n    }\n\n    function copyToClipboard(text) {\n        const textarea = document.createElement('textarea');\n        textarea.value = text;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textarea);\n    }\n\n    function showToast(message) {\n        const toast = document.createElement('div');\n        toast.textContent = message;\n        toast.style.position = 'fixed';\n        toast.style.bottom = '20px';\n        toast.style.left = '50%';\n        toast.style.transform = 'translateX(-50%)';\n        toast.style.backgroundColor = 'black';\n        toast.style.color = 'white';\n        toast.style.padding = '10px 20px';\n        toast.style.borderRadius = '5px';\n        toast.style.zIndex = '10000';\n        document.body.appendChild(toast);\n        setTimeout(() => {\n            toast.style.transition = 'opacity 0.5s ease';\n            toast.style.opacity = '0';\n            setTimeout(() => document.body.removeChild(toast), 500);\n        }, 2000);\n    }\n\n    function triggerFireworks() {\n        const emojis = ['\ud83c\udf89', '\ud83c\udf8a', '\u2728', '\ud83c\udf1f'];\n        const maxParticles = 20;\n        for (let i = 0; i < maxParticles; i++) {\n            const particle = document.createElement('div');\n            particle.textContent = emojis[Math.floor(Math.random() * emojis.length)];\n            particle.style.position = 'fixed';\n            particle.style.fontSize = '24px';\n            particle.style.animation = 'firework 2s linear forwards';\n            particle.style.left = `${Math.random() * window.innerWidth}px`;\n            particle.style.bottom = '0px';\n            document.body.appendChild(particle);\n            particle.addEventListener('animationend', () => document.body.removeChild(particle));\n        }\n    }\n\n    const style = document.createElement('style');\n    document.head.appendChild(style);\n    style.sheet.insertRule(`@keyframes firework {\n        0% { transform: translateY(0); opacity: 1; }\n        100% { transform: translateY(-300px); opacity: 0; }\n    }`, 0);\n\n    const newUrl = transformURL(window.location.href);\n    if (newUrl) {\n        copyToClipboard(newUrl);\n        showToast('URL copied to clipboard!');\n        triggerFireworks();\n    } else {\n        showToast('No matching URL found!');\n    }\n})();\n"))),(0,r.kt)("h2",{id:"content-editable"},"Content editable"),(0,r.kt)("p",null,"Flips contentEditable on body to make copy-paste on laptop from keyboard easier."),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83d\udd1b Content Editable")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("p",null,"2023-03-12"),(0,r.kt)("p",null,"Code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"javascript: document.body.contentEditable = (document.body.contentEditable === 'true') ? false : true;\n")),(0,r.kt)("h2",{id:"force-visited-links-to-be-silver"},'Force visited links to be "silver"'),(0,r.kt)("p",null,"Helpful for podcast sites"),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83e\uddd3 Silver Links")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("p",null,"2023-05-31"),(0,r.kt)("p",null,"Code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"javascript:(function() {\n    var newStylesheet = document.createElement('style');\n    document.head.appendChild(newStylesheet);\n    newStylesheet.sheet.insertRule('a:visited { color: silver !important }', 0);\n})();\n")),(0,r.kt)("h2",{id:"wake-lock"},"Wake lock"),(0,r.kt)("p",null,"Through the browser api, and while the current browser page is active, forces the screen to never lock or go sleep."),(0,r.kt)("p",null,"Name:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"\ud83d\udc40 Wake Lock")),(0,r.kt)("p",null,"Revision:"),(0,r.kt)("p",null,"2023-06-28"),(0,r.kt)("p",null,"Code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"javascript:(async function() {\n  let statusElem = document.createElement('div');\n  statusElem.style.position = 'fixed';\n  statusElem.style.bottom = '0';\n  statusElem.style.right = '0';\n  statusElem.style.background = 'lightgray';\n  statusElem.style.padding = '10px';\n  document.body.appendChild(statusElem);\n\n  let wakeLock = null;\n  try {\n    wakeLock = await navigator.wakeLock.request('screen');\n    statusElem.textContent = 'Wake Lock is active!';\n  } catch (err) {\n    statusElem.textContent = `${err.name}, ${err.message}`;\n  }\n})();\n\n")),(0,r.kt)("h2",{id:"next-please"},"Next, please!"),(0,r.kt)("p",null,"Placeholder."))}p.isMDXComponent=!0}}]);