"use strict";(self.webpackChunkzharii=self.webpackChunkzharii||[]).push([[4040],{96080:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(667);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},59670:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var a=n(54570),r=n(89462),o=(n(667),n(96080)),i=["components"],l={},s="dev-lua",p={unversionedId:"dev-lua",id:"dev-lua",title:"dev-lua",description:"Date: 2024-11-10",source:"@site/docs/dev-lua.md",sourceDirName:".",slug:"/dev-lua",permalink:"/docs/dev-lua",editUrl:"https://github.com/dzharii/dzharii.github.io/docs/dev-lua.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"dev-linux",permalink:"/docs/dev-linux"},next:{title:"dev-oculus-quest2-inbox",permalink:"/docs/dev-oculus-quest2-inbox"}},u=[{value:"Learn Lua",id:"learn-lua",children:[],level:2},{value:"Projects \ud83d\udc96 Lua",id:"projects--lua",children:[{value:"Text Editors and IDEs",id:"text-editors-and-ides",children:[],level:3},{value:"Networking and Web Development",id:"networking-and-web-development",children:[],level:3},{value:"Game Development and Modding",id:"game-development-and-modding",children:[],level:3},{value:"Text",id:"text",children:[],level:3},{value:"Operating Systems and Window Managers",id:"operating-systems-and-window-managers",children:[],level:3},{value:"Database and Backend Tools",id:"database-and-backend-tools",children:[],level:3},{value:"Media and Graphics",id:"media-and-graphics",children:[],level:3},{value:"Networking and Packet Processing",id:"networking-and-packet-processing",children:[],level:3},{value:"Programming Tools and Extensions",id:"programming-tools-and-extensions",children:[],level:3},{value:"Automation and Workflow Tools",id:"automation-and-workflow-tools",children:[],level:3},{value:"Community and Modular Extensions",id:"community-and-modular-extensions",children:[],level:3},{value:"3D Applications",id:"3d-applications",children:[],level:3}],level:2}],m={toc:u};function c(e){var t=e.components,l=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dev-lua"},"dev-lua"),(0,o.kt)("p",null,"Date: 2024-11-10"),(0,o.kt)("p",null,"I will think critically and objectively about the problem."),(0,o.kt)("h2",{id:"learn-lua"},"Learn Lua"),(0,o.kt)("p",null,"2024-11-11 ",(0,o.kt)("a",{parentName:"p",href:"https://devhints.io/lua"},"Lua cheatsheet")," { devhints.io }"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{alt:"image-20241110234228949",src:n(46018).Z,width:"1276",height:"805"}))),(0,o.kt)("p",null,"2024-11-11 ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/doches/2219649"},"Lua Cheat Sheet")," { gist.github.com }"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Updated to Lua 5.4 with the GPT assistance. I am not sure if it works")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'-- Lua Cheat Sheet for Programmers, by Al Sweigart http://coffeeghost.net\n-- This cheat sheet is an executable Lua program.\n\n--[[\n  This is a multiline comment\n]]\n\n--[[\n  This is a neat trick. The first -- makes -[[ not a multiline comment.\n]]\nprint("This line executes.")\n--]] The rest of this line is also a comment.\n\nprint("Here is a string" .. \' concatenated with \' .. 2 .. \' other strings.\')\n\n-- Note: All number types are doubles. There are no integers.\nprint(type(42), type(42.0)) -- prints out "number  number"\n\n-- Variables\nvariable_one = 1 + 2 - 3 -- This will equal zero.\nvariable_One = "Variables are case sensitive."\nnegative_twofiftysix = -2^8\n\n-- Multiple assignment and swapping\nlocal a, b = 42, 101\na, b = b, a -- provides a nice value swap trick\nlocal x, y, z = 1, 2, 3, "this value is discarded"\n\n-- nil comparisons\nprint(previously_unused_variable == nil) -- prints true, all vars start as nil\nprint(nil == 0 or nil == "") -- prints false, nil is not the same as false or 0\nprint(\'The # len operator says there are \' .. #\'hello\' .. \' letters in "hello".\')\n\n-- Boolean operations\nsome_bool_variable = true and false or true and not false\n\n-- Tables\nlocal a_table = {[\'spam\'] = "Type something in:", [\'eggs\'] = 10} -- tables are dictionaries/arrays\nprint(a_table[\'spam\'])\n\n-- User input\nlocal what_the_user_typed_in = io.read()\nprint(\'You typed in \' .. what_the_user_typed_in)\n\n-- If statements\nif 10 < 20 then\n    print("apple" == "orange") -- prints false\n    print("apple" ~= "orange") -- true, an apple is not equal to an orange\n    local foo = 42\n    print(foo)\nelif 50 < 100 then\n    -- These clauses can contain no lines of code.\nend\n\n-- Scoping example\nprint(foo) -- prints nil, local foo exists only in that "if" block above\n\n-- While loop\nlocal m = 0\nwhile m < 10 do\n    print("howdy " .. m)\n    m = m + 1 -- there is no m++ or m += 1\n    repeat\n        print("Repeat loops check the condition at end, and stops if it is true.")\n        break -- breaks out of the loop early\n    until m == 9999\nend\n\n-- For loops\nfor i = 1, 10 do\n    for j = 1, 10, 2 do\n        print("for loops add 1 to i and 2 to j each iteration " .. i .. \' \' .. j)\n    end\nend\n\n-- Functions\nlocal function Greet(name)\n    print(\'Hello \' .. name)\n    bar = 100\n    return "returns nil if you don\'t have a return statement."\nend\nGreet(\'Al Sweigart\')\nprint(bar) -- prints 100\n\n--[[\nAdditional Lua Features:\n]]\n\n-- 1. Metatables and Metamethods\nlocal myTable = {1, 2, 3}\nsetmetatable(myTable, {\n    __add = function(table1, table2)\n        local result = {}\n        for i = 1, #table1 do\n            result[i] = table1[i] + table2[i]\n        end\n        return result\n    end\n})\nlocal anotherTable = {4, 5, 6}\nlocal resultTable = myTable + anotherTable\nprint(resultTable[1], resultTable[2], resultTable[3]) -- demonstrates metamethods\n\n-- 2. Coroutines\nlocal function foo()\n    for i = 1, 10 do\n        print("Coroutine iteration: " .. i)\n        coroutine.yield() -- pauses the coroutine\n    end\nend\nlocal co = coroutine.create(foo)\ncoroutine.resume(co) -- runs until yield\ncoroutine.resume(co) -- resumes from yield\n\n-- 3. Modules and Packages\n-- Modules and packages allow us to separate code into reusable parts.\nlocal myModule = require("myModule")\n\n-- 4. Object-Oriented Programming (OOP) with Lua\nlocal Account = {balance = 0}\nfunction Account:new(o, balance)\n    o = o or {}\n    setmetatable(o, self)\n    self.__index = self\n    self.balance = balance or 0\n    return o\nend\nfunction Account:deposit(amount)\n    self.balance = self.balance + amount\nend\nlocal myAccount = Account:new(nil, 100)\nmyAccount:deposit(50)\nprint(myAccount.balance) -- prints 150\n\n-- 5. Error Handling\nlocal status, err = pcall(function() error("An error occurred") end)\nif not status then\n    print("Caught error: " .. err)\nend\n\n-- 6. File Handling and File I/O\nlocal file = io.open("test.txt", "w")\nfile:write("Hello World")\nfile:close()\n\n-- 7. String Manipulation Functions\nprint(string.find("Hello Lua", "Lua")) -- finds "Lua" in string\nprint(string.match("I have 2 apples", "%d")) -- finds digits in string\n\n-- 8. Mathematical Functions\nprint(math.sin(math.pi / 2)) -- prints 1\nprint(math.floor(3.14)) -- prints 3\n\n-- 9. Standard Library Functions\nprint(table.concat({"Hello", "Lua"}, " ")) -- concatenates table values with separator\n\n-- 10. Iterators and the `pairs` / `ipairs` functions\nfor key, value in pairs(a_table) do\n    print(key, value)\nend\n\n-- 11. Garbage Collection\ncollectgarbage() -- performs garbage collection\n\n-- 12. Environment Manipulation\nprint(_G) -- prints global environment table\n\n-- 13. Debug Library\nprint(debug.traceback()) -- prints a traceback\n\n-- 14. Weak Tables\nlocal weakTable = setmetatable({}, {__mode = "v"}) -- weak reference in values\n\n-- 15. Upvalues and Closures\nlocal function outerFunc()\n    local x = 0\n    return function()\n        x = x + 1\n        return x\n    end\nend\nlocal counter = outerFunc()\nprint(counter()) -- prints 1\nprint(counter()) -- prints 2\n\n-- 16. Bitwise Operations\n-- Lua 5.3 introduced bitwise operators like &, |, ~, <<, >>\nlocal bitwise_and = 5 & 3 -- performs bitwise AND, result is 1\nlocal bitwise_or = 5 | 3 -- performs bitwise OR, result is 7\nlocal bitwise_not = ~5 -- performs bitwise NOT, result is -6\nlocal bitwise_shift_left = 5 << 1 -- result is 10\nlocal bitwise_shift_right = 5 >> 1 -- result is 2\nprint(bitwise_and, bitwise_or, bitwise_not, bitwise_shift_left, bitwise_shift_right)\n\n-- 17. Finer Control of Scope (do blocks)\ndo\n    local scoped_var = 42\n    print(scoped_var) -- prints 42\nend\n-- print(scoped_var) -- would cause an error, scoped_var is not defined here\n\n-- 18. Custom Iterators\nfunction custom_iterator(max_count)\n    local count = 0\n    return function()\n        count = count + 1\n        if count <= max_count then\n            return count\n        end\n    end\nend\nfor value in custom_iterator(5) do\n    print(value) -- prints values from 1 to 5\nend\n\n-- 19. Pattern Matching with string.gsub\nlocal str = "I have 2 apples and 3 oranges."\nlocal result_str = string.gsub(str, "%d+", "<number>") -- replaces all digits with \'<number>\'\nprint(result_str) -- prints: I have <number> apples and <number> oranges.\n\n-- 20. Tables as Sets\nlocal setA = {1, 2, 3}\nlocal setB = {3, 4, 5}\nlocal union = {}\nlocal intersection = {}\n\n-- Union operation\nfor _, v in ipairs(setA) do union[v] = true end\nfor _, v in ipairs(setB) do union[v] = true end\nprint("Union:")\nfor k in pairs(union) do print(k) end\n\n-- Intersection operation\nfor _, v in ipairs(setA) do intersection[v] = false end\nfor _, v in ipairs(setB) do\n    if intersection[v] == false then\n        intersection[v] = true\n    end\nend\nprint("Intersection:")\nfor k, v in pairs(intersection) do\n    if v == true then\n        print(k)\n    end\nend\n\n-- 21. Command Line Arguments\n-- The \'arg\' table stores command line arguments passed to the script\nfor i, v in ipairs(arg) do\n    print("Argument " .. i .. ": " .. v)\nend\n\n')),(0,o.kt)("p",null,"2024-11-11 ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/JettIsOnTheNet/b7472ee8b1f5b324c498302b0f61957d"},"Awesome Lua Cheat Sheet \xb7 GitHub")," {gist.github.com}"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{alt:"image-20241111000353791",src:n(61591).Z,width:"979",height:"760"}))),(0,o.kt)("p",null,"2024-11-11 ",(0,o.kt)("a",{parentName:"p",href:"https://www.codecademy.com/learn/learn-lua/modules/learn-lua-introduction/cheatsheet"},"Learn Lua: Introduction to Lua Cheatsheet | Codecademy")," { ",(0,o.kt)("a",{parentName:"p",href:"http://www.codecademy.com"},"www.codecademy.com")," }"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("img",{alt:"image-20241111000550931",src:n(9195).Z,width:"1323",height:"629"}))),(0,o.kt)("h2",{id:"projects--lua"},"Projects \ud83d\udc96 Lua"),(0,o.kt)("p",null,"Here\u2019s a categorized list of the Lua-based projects, organized by their primary application domain. This organization provides better context and relevance:"),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"text-editors-and-ides"},"Text Editors and IDEs"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://neovim.io/"},"Neovim")),": A hyperextensible Vim-based text editor using Lua for configuration and plugin development.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/neovim/neovim"},"GitHub - neovim/neovim")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://studio.zerobrane.com/"},"ZeroBrane Studio")),": A lightweight Lua IDE with debugging support for quick development cycles.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/pkulchenko/ZeroBraneStudio"},"GitHub - pkulchenko/ZeroBraneStudio")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://studio.zerobrane.com/debugging"},"MobDebug")),": A remote debugger for Lua integrated into various Lua environments.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/pkulchenko/MobDebug"},"GitHub - pkulchenko/MobDebug"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"networking-and-web-development"},"Networking and Web Development"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.wireshark.org/"},"Wireshark")),": A network protocol analyzer supporting Lua for custom dissectors and plugins.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://gitlab.com/wireshark/wireshark"},"GitLab - Wireshark")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://nmap.org/"},"Nmap")),": Lua-powered Nmap Scripting Engine (NSE) enables advanced network discovery and security tasks.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/nmap/nmap"},"GitHub - nmap/nmap")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://openresty.org/"},"OpenResty")),": A full-fledged web application server bundling Nginx and LuaJIT.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/openresty/openresty"},"GitHub - openresty/openresty")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://konghq.com/"},"Kong")),": An open-source API gateway leveraging Lua for plugin development and request handling.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Kong/kong"},"GitHub - Kong/kong")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://leafo.net/lapis/"},"Lapis")),": A Lua-based web framework running inside OpenResty for creating performant web applications.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/leafo/lapis"},"GitHub - leafo/lapis")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://trafficserver.apache.org/"},"Apache Traffic Server")),": A high-performance web proxy cache with Lua-based plugins for customization.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/apache/trafficserver"},"GitHub - apache/trafficserver")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://openwrt.org/docs/guide-user/luci/luci.essentials"},"LuCI")),": A web-based configuration interface for OpenWrt routers, built entirely with Lua.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/openwrt/luci"},"GitHub - openwrt/luci"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"game-development-and-modding"},"Game Development and Modding"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://love2d.org/"},"L\xd6VE")),": A framework for creating 2D games in Lua.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/love2d/love"},"GitHub - love2d/love")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.minetest.net/"},"Minetest")),": A voxel game engine using Lua for modding custom game content.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/minetest/minetest"},"GitHub - minetest/minetest")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://defold.com/"},"Defold")),": A cross-platform game engine using Lua for scripting game logic.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/defold/defold"},"GitHub - defold/defold")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://hedgewars.org/"},"Hedgewars")),": A Worms-like strategy game using Lua for scripting missions and AI.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/hedgewars/hw"},"GitHub - hedgewars/hw")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.cocos.com/en"},"Cocos2d-x")),": A game development framework with Lua bindings for cross-platform game logic.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/cocos2d/cocos2d-x"},"GitHub - cocos2d/cocos2d-x")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://powdertoy.co.uk/"},"The Powder Toy")),": A free physics sandbox game using Lua for modding custom elements and simulations.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/The-Powder-Toy/The-Powder-Toy"},"GitHub - The-Powder-Toy/The-Powder-Toy")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/Windower/Lua"},"Windower")),": A Final Fantasy XI tool that enables Lua scripting for custom plugins and game enhancements.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Windower/Lua"},"GitHub - Windower/Lua"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"text"},"Text"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://pandoc.org/"},"Pandoc")),": A universal document converter with Lua filters for AST manipulation.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/jgm/pandoc"},"GitHub - jgm/pandoc"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"operating-systems-and-window-managers"},"Operating Systems and Window Managers"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://awesomewm.org/"},"AwesomeWM")),": A highly configurable window manager for X using Lua for scripting.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/awesomeWM/awesome"},"GitHub - awesomeWM/awesome")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.open-tx.org/"},"OpenTX")),": Open-source firmware for RC radio transmitters using Lua for custom functions.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/opentx/opentx"},"GitHub - opentx/opentx"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"database-and-backend-tools"},"Database and Backend Tools"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://tarantool.io/"},"Tarantool")),": An in-memory database and application server using Lua for stored procedures.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/tarantool/tarantool"},"GitHub - tarantool/tarantool"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"media-and-graphics"},"Media and Graphics"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://mpv.io/"},"mpv")),": A media player supporting Lua scripting for automation and IPC.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mpv-player/mpv"},"GitHub - mpv-player/mpv")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.darktable.org/"},"Darktable")),": An open-source photography workflow application supporting Lua scripting for task automation.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/darktable-org/darktable"},"GitHub - darktable-org/darktable"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"networking-and-packet-processing"},"Networking and Packet Processing"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://snabb.co/"},"Snabb")),": A high-performance networking toolkit using LuaJIT for processing network packets.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/snabbco/snabb"},"GitHub - snabbco/snabb"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"programming-tools-and-extensions"},"Programming Tools and Extensions"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://premake.github.io/"},"Premake")),": A build configuration tool using Lua scripts to generate project files for multiple platforms.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/premake/premake-core"},"GitHub - premake/premake-core")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://flowtype.org/"},"Flow")),": Lua-based projects like TypeScriptToLua compile TypeScript to Lua for static typing benefits.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/TypeScriptToLua/TypeScriptToLua"},"GitHub - TypeScriptToLua/TypeScriptToLua")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/dibyendumajumdar/ravi"},"Ravi")),": A Lua derivative with optional static typing and JIT compilation for enhanced performance.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/dibyendumajumdar/ravi"},"GitHub - dibyendumajumdar/ravi"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"automation-and-workflow-tools"},"Automation and Workflow Tools"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.hammerspoon.org/"},"Hammerspoon")),": A macOS tool using Lua scripting for automating workflows and OS integration.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/Hammerspoon/hammerspoon"},"GitHub - Hammerspoon/hammerspoon")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://sile-typesetter.org/"},"SILE")),": A TeX-inspired typesetting system using Lua for configuration and custom extensions.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/sile-typesetter/sile"},"GitHub - sile-typesetter/sile"))))),(0,o.kt)("h3",{id:"community-and-modular-extensions"},"Community and Modular Extensions"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://awesomewm.org/"},"AwesomeWM Widgets")),": Community-driven widgets and extensions for Awesome Window Manager, all scripted in Lua.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/streetturtle/awesome-wm-widgets"},"GitHub - streetturtle/awesome-wm-widgets")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/ElunaLuaEngine/Eluna"},"Eluna")),": A Lua engine for World of Warcraft emulators, allowing custom scripting for mechanics and events.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ElunaLuaEngine/Eluna"},"GitHub - ElunaLuaEngine/Eluna")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://www.gammon.com.au/mushclient"},"Mushclient")),": A MUD client supporting Lua scripting for automating gameplay and custom behaviors.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/nickgammon/MUSHclient"},"GitHub - nickgammon/MUSHclient")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://mpv.io/manual/master/#json-ipc"},"mpv Socket Control")),": Enables Lua-based remote control and IPC scripting for the mpv media player.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mpv-player/mpv"},"GitHub - mpv-player/mpv"))))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"3d-applications"},"3D Applications"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("a",{parentName:"strong",href:"https://crownengine.org/"},"Crown Engine")),": A high-performance game engine using Lua for scripting real-time applications.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Repository: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/dbartolini/crown"},"GitHub - dbartolini/crown"))))),(0,o.kt)("hr",null))}c.isMDXComponent=!0},46018:function(e,t,n){t.Z=n.p+"assets/images/image-20241110234228949-1a724f6733cb0da7e372885076466c27.png"},61591:function(e,t,n){t.Z=n.p+"assets/images/image-20241111000353791-fe4e07cacbb84135106a182a995e08de.png"},9195:function(e,t,n){t.Z=n.p+"assets/images/image-20241111000550931-e72084d8e9ec16b93df3a663fba3701e.png"}}]);